#!/usr/bin/env sh

install_packages() {
    pm install <~/.config/pkgs/base
}

setup_nodejs() {
    FNM_INSTALL_DIR=$HOME/.local/share/fnm

    if [ ! -x "$FNM_INSTALL_DIR/fnm" ]; then
        curl -fsSL https://fnm.vercel.app/install | bash -s -- --install-dir "$FNM_INSTALL_DIR" --skip-shell
    fi
    
    if [ ! -x "$(command -v fnm)" ]; then
        export PATH="$PATH:$FNM_INSTALL_DIR"
    fi

    eval "$(fnm env)"
    fnm install --lts
    fnm default lts-latest
    fnm use lts-latest
    
    corepack enable
    xargs npm -g install <~/.config/pkgs/npm
}

setup_rust() {
    if [ ! -x "$(command -v rustup)" ]; then
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path
    fi

    rustup install stable
    rustup install nightly
}

list_actions() {
    echo "1) Install packages"
    echo "2) Setup Node.js"
    echo "3) Setup Rust"
}

get_action() {
    case "$1" in
        1) echo install_packages ;;
        2) echo setup_nodejs ;;
        3) echo setup_rust ;;
    esac
}

while true; do
    list_actions
    echo "q) Quit"
    echo
    
    while true; do
        printf "Choose action: "
        read -r ANSWER

        if [ "$ANSWER" = q ] || [ "$ANSWER" = Q ]; then
            exit
        fi
        
        ACTION=$(get_action "$ANSWER")

        if [ "$ACTION" ]; then
            echo 
            echo "====================[ $ACTION :: start ]===================="
            echo 
            "$ACTION"
            echo 
            echo "====================[ $ACTION :: end ]===================="
            echo 
            break;
        fi
    done
done
