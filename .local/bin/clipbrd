#!/usr/bin/env bash

set -euo pipefail

source ~/.local/lib/bash/core.sh

help() {
  cat <<-EOT
		Access clipboard contents.

		Usage:
		  $(self) [<options>] <command>

		Commands:
		  g, get            Print clipboard contents.
		  s, set [<value>]  Set clipboard contents (from an argument or stdin).
		  c, clear          Clear clipboard contents.

		Options:
		  -h  Print this help.
	EOT
}

main() {
  local opt

  while getopts ":h" opt; do
    case "$opt" in
      h) help; exit ;;
      *) die_invalid_opt "$opt" ;;
    esac
  done

  shift $((OPTIND - 1))
  [[ $# -eq 0 ]] && die_missing_arg

  case "${1-}" in
    g|get) get_clipboard ;;
    s|set) if [[ $# -gt 1 ]];
        then set_clipboard_from_arg "$2"
        else set_clipboard_from_stdin
      fi ;;
    c|clear) clear_clipboard ;;
    *) die_help "invalid command '$1'" ;;
  esac
}

get_clipboard() {
  if [[ ${MSYSTEM-} =~ ^MINGW(32|64)$ ]]; then
    powershell -command "Get-Clipboard"
  else
    xclip -out -selection clipboard
  fi
}

set_clipboard_from_arg() {
  if [[ ${MSYSTEM-} =~ ^MINGW(32|64)$ ]]; then
    printf "%s" "$1" | clip
  else
    printf "%s" "$1" | xclip -in -selection clipboard
  fi
}

set_clipboard_from_stdin() {
  if [[ ${MSYSTEM-} =~ ^MINGW(32|64)$ ]]; then
    cat | clip
  else
    xclip -in -selection clipboard
  fi
}

clear_clipboard() {
  if [[ ${MSYSTEM-} =~ ^MINGW(32|64)$ ]]; then
    printf "" | clip
  else
    xclip -in -selection clipboard </dev/null
  fi
}

main "$@"
