#!/usr/bin/env bash

set -euo pipefail

source "$BASH_LIB_DIR/core.sh"

help() {
  cat <<-EOT
		Make playlist from MPD database.

		Usage:
		  $(self) [options] <tag> [value...]

		Options:
		  -o  Overwrite existing files without prompting.
		  -v  Verbose mode with additional output.
		  -h  Display this help.

		Tag:
		  One of Artist|AlbumArtist|Album|Genre|Date.

		Value:
		  Zero or more tag values. If not specified, playlist
		  will be created for every tag value in MPD database.

		Examples:
		  Make playlists for year 2000 and 2001:
		  $(self) Date 2000 2001

		  Make playlist for every year:
		  $(self) Date
	EOT
}

main() {
  local overwrite=false
  local verbose=false
  local opt

  while getopts ":ovh" opt; do
    case "$opt" in
      o) overwrite=true ;;
      v) verbose=true ;;
      h) help; exit ;;
      *) die_invalid_opt "$opt" ;;
    esac
  done

  shift $((OPTIND - 1))
  [[ $# -eq 0 ]] && die_missing_arg

  local tag=$1
  shift
  local values=("$@")

  [[ ${PLAYLISTS_DIR:-} ]] || die_no_var PLAYLISTS_DIR
  [[ ${MUSIC_DIR:-} ]] || die_no_var MUSIC_DIR

  [[ -d $PLAYLISTS_DIR ]] || die "'$PLAYLISTS_DIR' is not a directory"
  [[ -d $MUSIC_DIR ]] || die "'$MUSIC_DIR' is not a directory"

  if [[ $verbose == true ]]; then
    echo "Updating MPD database"
  fi

  mpc update --wait --quiet # Check mpd is running + update database

  if [[ ${#values[@]} -eq 0 ]]; then
    mapfile -t values < <(mpc list "$tag")

    if [[ ${#values[@]} -eq 1 && ! ${values[0]} ]]; then
      die "no value for tag $tag"
    fi
  fi

  local target_dir="$PLAYLISTS_DIR/$tag"
  mkdir -p "$target_dir"

  # The generated output is currently optimized for "FiiO X1" device.
  # 1) Replace '/' in prefix by '\' because X1 cannot handle paths like '../..'.
  # 2) Keep '/' in the rest of the path, so X1 displays it instead of track title.

  local prefix
  prefix=$(realpath --relative-to="$target_dir" "$MUSIC_DIR")/
  prefix=${prefix//\//\\\\}

  local value
  for value in "${values[@]}"; do
    local target="$target_dir/${value//\//+}.m3u"

    if [[ $verbose == true ]]; then
      echo "Generating $target"
    fi

    if [[ $overwrite == true || ! -e $target ]] || confirm "Overwrite $target?"; then
      echo "#EXTM3U" > "$target"

      # shellcheck disable=SC1003
      mpc search "$tag" "$value" \
        | awk -v prefix="$prefix" '{print prefix $0}' \
        >> "$target"
    fi
  done

  mpc --quiet clear
}

main "$@"
