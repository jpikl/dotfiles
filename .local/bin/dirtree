#!/usr/bin/env bash
# Based on https://centerkey.com/tree

set -euo pipefail

source "$BASH_LIB_DIR/core.sh"

help() {
  cat <<-EOT
		Print directory tree.

		Usage:
		  $(self) [options] [--] [path]

		Options:
		  -m <depth>  The maximum number of levels to descent.
		  -f          Print also files.
		  -s          Sort directory entries by name.
		  -h          Print this help.

		Path:
		  Root of a directory tree to print.
		  Default path is the current working directory.
	EOT
}

main() {
  local max_depth=
  local files=false
  local sort=false
  local opt

  while getopts ":m:fsh" opt; do
    case "$opt" in
      m) max_depth=$OPTARG ;;
      f) files=true ;;
      s) sort=true ;;
      h) help; exit ;;
      *) die_invalid_opt "$opt" ;;
    esac
  done

  shift $((OPTIND - 1))

  if [[ $# -ge 1 ]]; then
    [[ -d $1 ]] || die "'$1' is not a directory"
    cd "$1"
  fi

  local find_args=("-mindepth" "1")

  if [[ $max_depth ]]; then
    if [[ $max_depth =~ ^[0-9]+$ ]]; then
      find_args+=("-maxdepth" "$max_depth")
    else
      die_help "option -m requires positive integer as its argument"
    fi
  fi

  if [[ $files == false ]]; then
    find_args+=("-type" "d")
  fi

  find_args+=("-print0")

  # Sed expressions:
  # 1) Replace leading dirs by spaces.
  # 2) Remove extra left padding.
  # 3) Add newlines.

  find "${find_args[@]}" \
    | if [[ $sort == true ]]; then
        sort --zero-terminated
      else
        cat
      fi \
    | sed --null-data \
          --expression "s/[^\/]*\//  /g" \
          --expression "s/^  //" \
          --expression "s/$/\n/" \
    | tr --delete '\000'
}

main "$@"
