#!/usr/bin/env bash

set -euo pipefail

source "$BASH_LIB_DIR/core.sh"

help() {
  cat <<-EOT
		Start or reuse existing ssh-agent process.

		Usage:
		  $(self) [options]

		Options:
		  -h  Print this help.
	EOT
}

main() {
  local opt

  while getopts ":h" opt; do
    case "$opt" in
      h) help; exit ;;
      *) die_invalid_opt "$opt" ;;
    esac
  done

  local vars_file=/tmp/ssh-agent-vars-$UID
  local pid_state=
  local sock_state=

  {
    echo "Checking environment"

    pid_state=$(check_pid)
    sock_state=$(check_sock)

    if [[ $pid_state == valid && $sock_state == valid ]]; then
      exit
    fi

    echo

    if [[ -f $vars_file ]]; then
      echo "Loading $vars_file"

      unset SSH_AGENT_PID
      unset SSH_AUTH_SOCK

      source "$vars_file" >/dev/null

      pid_state=$(check_pid)
      sock_state=$(check_sock)

      echo

      if [[ $pid_state != valid || $sock_state != valid ]]; then
        echo "Deleting $vars_file"
        rm "$vars_file"

        if [[ $pid_state == valid ]]; then
          echo "Killing agent pid $SSH_AGENT_PID"
          kill "$SSH_AGENT_PID"
        fi

        if [[ $sock_state == valid ]]; then
          "Deleting agent socket $SSH_AUTH_SOCK"
          rm "$SSH_AUTH_SOCK"
        fi
      fi
    fi

    if [[ ! -f $vars_file ]]; then
      echo "Generating $vars_file"
      echo "Starting agent"
      ssh-agent > $vars_file
    fi
  } >&2

  cat "$vars_file"
}

check_pid() {
  if [[ ${SSH_AGENT_PID:-} ]]; then
    if kill -0 "$SSH_AGENT_PID" &>/dev/null; then
      echo "[ok] SSH_AGENT_PID: $SSH_AGENT_PID" >&2
      echo "valid"
    else
      echo "[invalid] SSH_AGENT_PID: $SSH_AGENT_PID" >&2
      echo "invalid"
    fi
  else
    echo "[unset] SSH_AUTH_SOCK" >&2
    echo "unset"
  fi
}

check_sock() {
  if [[ ${SSH_AUTH_SOCK:-} ]]; then
    if [[ -S $SSH_AUTH_SOCK ]]; then
      echo "[ok] SSH_AUTH_SOCK: $SSH_AUTH_SOCK" >&2
      echo "valid"
    else
      echo "[invalid] SSH_AUTH_SOCK: $SSH_AUTH_SOCK" >&2
      echo "invalid"
    fi
  else
    echo "[unset] SSH_AUTH_SOCK" >&2
    echo "unset"
  fi
}

main "$@"
