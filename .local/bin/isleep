#!/usr/bin/env bash

set -euo pipefail

source "$BASH_LIB_DIR/core.sh"
source "$BASH_LIB_DIR/utils.sh"

readonly ERR_CANCELED=2

help() {
  cat <<-EOT
		Cancelable sleep with displayed progress.

		Usage:
		  $(self) [options] <duration> [message]

		Options:
		  -h  Display this help.

		Duration:
		  Number of seconds to sleep for.

		Message:
		  Message to display during sleep.

		Exit status:
		  0  Normal exit.
		  1  Error.
		  2  Canceled by user.
	EOT
}

main() {
  local opt

  while getopts ":h" opt; do
    case "$opt" in
      h) help; exit ;;
      *) die_invalid_opt "$opt" ;;
    esac
  done

  shift $((OPTIND - 1))
  [[ $# -eq 0 ]] && die_missing_arg

  # shellcheck disable=SC2015
  is_integer "$1" && [[ $1 -ge 0 ]] || die "invalid duration '$1'"

  local duration=$1
  local time_left=$duration
  local message=${2:-}
  local error=$ERR_OK

  tput sc # Save the cursor position.
  tput civis || true # Set to cursor to be invisible (may not be supported by terminal).

  while [[ $time_left -gt 0 ]]; do
    tput rc # Restore the cursor position.

    printf "[%s] (%d s)" "$(progbar -w 10 -m "$duration" "$time_left")" "$time_left"
    [[ $message ]] &&  printf " %s" "$message"
    printf " [Press any key to skip] " # Extra space at the end for case the previous line was 1 char longer.

    if read -rsn1 -t1; then
      error=$ERR_CANCELED
      break
    fi

    (( time_left-- ))
  done

  tput rc # Restore the cursor position.
  tput ed # Clear from the cursor to the end of the screen.
  tput cnorm || true # Set the cursor to its normal state (may not be supported by terminal).

  exit $error
}

main "$@"
