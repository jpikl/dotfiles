#!/usr/bin/env bash

set -euo pipefail

source "$BASH_LIB_DIR/core.sh"
source "$BASH_LIB_DIR/args.sh"
source "$BASH_LIB_DIR/utils.sh"

help() {
  cat <<-EOT
		Read pressed key name from stdin.

		Usage:
		  $(self) [options]

		Options:
      -t <seconds>  Timeout after which the read is canceled.
		  -r            Print raw byte sequence instead of a human readable name.
		  -h            Display this help.

		Exit status:
		  0  Key name was successfully read.
		  1  Error occurred.
		  2  Unable to recognize key name.
		  3  Timeout expired.

		For correct key name detection, terminal should be switched to
		application mode 'tput smkx' if possible.
	EOT
}

set_timeout() {
  is_decimal "$1" || die "invalid timeout '$1'"
  timeout=$1
}

init() {
  local opt

  while getopts ":rt:h" opt; do
    case "$opt" in
      r) raw=true ;;
      t) set_timeout "$OPTARG" ;;
      h) help; exit ;;
      *) die_invalid_opt "$opt" ;;
    esac
  done
}

run() {
  local key
  local char
  local status=0

  if [[ $timeout ]]; then
    read -rsN1 -t "$timeout" key || status=$?
  else
    read -rsN1 key || status=$?
  fi

  [[ $status -gt 128 ]] && exit 4
  [[ $status -gt 0 ]] && exit 3

  if [[ $key == $'\e' ]]; then
    for ((i = 0; i < 4; i++)); do
      if read -rt0 && read -rsN1 char; then
        key+=$char
      else
        break
      fi
    done
  fi

  if [[ $raw = true ]]; then
    printf "%s" "$key"
    return
  fi

  if [[ $key = [[:graph:]] ]]; then
    echo "${key,,}" # To lower case
    return
  fi

  local -A key_names=(
    [$'\e']=escape
    [$'\n']=enter
    [$'\t']=tab
    [$'\x7f']=backspace # '\b' is not working
    [' ']=space
  )

  if [[ ${key_names[$key]+_} ]]; then
    echo "${key_names[$key]}"
    return
  fi

  local escaped_key=$key

  escaped_key=${escaped_key/$'\e'/\\\\E}
  escaped_key=${escaped_key/$'\n'/\\\\n}
  escaped_key=${escaped_key/$'\t'/\\\\t}
  escaped_key=${escaped_key/[/\\[}

  infocmp -L1 \
    | grep --extended-regexp "key_[a-z]+=${escaped_key}," \
    | sed --regexp-extended --expression 's/^.*_([a-z]+)=.*$/\1/' \
    || exit 2
}

function main() {
  local raw=false
  local timeout=

  init "$@"
  run
}

main "$@"
