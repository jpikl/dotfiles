#!/usr/bin/env bash

set -euo pipefail

source "$BASH_LIB_DIR/core.sh"
source "$BASH_LIB_DIR/args.sh"

help() {
  cat <<-EOT
		Find directories of node projects.

		Usage:
		  $(self) [options] [--] [path]

		Options:
		  -0  Results will be terminated with null character.
		  -h  Display this help.

		Arguments:
		  path  Search starting point.
		        Default path is the current working directory.
	EOT
}

set_path() {
  [[ -d $1 ]] || die "'$1' is not a directory"
  path=$1
}

init() {
  local opt

  while getopts ":0h" opt; do
    case "$opt" in
      0) zero_terminated=true ;;
      h) help; exit ;;
      *) die_invalid_opt "$opt" ;;
    esac
  done

  shift $((OPTIND - 1))

  if [[ $# -ge 1 ]]; then
    set_path "$1"
  fi
}

run() {
  cd "$path"

  local expression
  local npm_dirs

  mapfile -t expression < <(genfindexpr -ls)
  mapfile -t -d '' npm_dirs < <(find . "${expression[@]}" -name package.json -printf "%h\0")

  [[ ${#npm_dirs[@]} -gt 0 ]] || die "unable to find any package.json"

  if [[ $zero_terminated = true ]]; then
    printf "%s\0" "${npm_dirs[@]}"
  else
    printf "%s\n" "${npm_dirs[@]}"
  fi
}

function main() {
  local zero_terminated=false
  local path=$PWD

  init "$@"
  run
}

main "$@"
