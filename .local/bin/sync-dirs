#!/usr/bin/env bash

set -euo pipefail

source "$BASH_LIB_DIR/core.sh"
source "$BASH_LIB_DIR/args.sh"

help() {
  cat <<-EOT
		Synchronize two directories using rsync.

		Usage:
		  $(self) [options] [--] <source> <destination>

		Options:
		  -t, --times-only  Preserve only modification times.
		  -e, --exfat       Optimize for exFAT filesystem.
		  -f, --force       Skip dry run. Perform sync without confirmation.
		  -h, --help        Display this help.

		Source:
		  Source directory.

		Destination:
		  Destination directory.
	EOT
}

set_source() {
  [[ -d $1 ]] || die "'$1' is not a directory"

  if [[ $1 == */ ]]; then
    source=$1
  else
    source=$1/ # Source directory MUST end with /.
  fi
}

set_destination() {
  [[ -d $1 ]] || die "'$1' is not a directory"
  destination=$1
}

init() {
  local -r short_opts=tefh
  local -r long_opts=times-only,exfat,force,help
  local args

  args=$(get_args "$short_opts" "$long_opts" "$@")
  eval set -- "$args"

  while true ; do
    case "$1" in
      -t|--times-only) times_only=true; shift ;;
      -e|--exfat)      exfat=true; shift ;;
      -f|--force)      force=true; shift ;;
      -h|--help)       help; exit ;;
      --)              shift; break ;;
      *)               die_unprocessable_args ;;
    esac
  done

  if [[ $# -ge 2 ]]; then
    set_source "$1"
    set_destination "$2"
  else
    die_missing_args
  fi
}

sync_dirs() {
  if [[ $source -ef $destination ]]; then
    die "'$source' and '$destination' point to the same directory"
  fi

  local opts=("--delete" "--human-readable")

  if [[ $times_only = true ]]; then
      opts+=("--recursive" "--times")
  else
      opts+=("--archive")
  fi

  if [[ $exfat == true ]]; then
      opts+=("--modify-window=1" "--exclude='System Volume Information'")
  fi

  local -r opts_info=("--itemize-changes" "--stats")
  local -r opts_progress=("--info=progress2")

  if [[ $force = true ]]; then
    echo "Synchronizing '$source' to '$destination'"
    rsync "${opts[@]}" "${opts_info[@]}" "${opts_progress[@]}" -- "$source" "$destination"
  else
    echo "Detecting differences from '$source' to '$destination'"
    rsync "${opts[@]}" "${opts_info[@]}" --dry-run -- "$source" "$destination"
    echo

    if confirm "Continue with synchronization?"; then
        echo "Synchronizing '$source' to '$destination'"
        rsync "${opts[@]}" "${opts_progress[@]}" -- "$source" "$destination"
    fi
  fi
}

function main() {
  local times_only=false
  local exfat=false
  local force=false
  local source
  local destination

  init "$@"
  sync_dirs
}

main "$@"
