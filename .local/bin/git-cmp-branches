#!/usr/bin/env bash

set -euo pipefail

source "$BASH_LIB_DIR/core.sh"

help() {
  cat <<-EOT
		Compare two Git branches.

		Usage:
		  $(self) [<options>] <branch> <others>...

		Args:
		  <branch>     Target branch.
		  <others>...  Branches to compare with target.

		Options:
		  -h  Print this help.
	EOT
}

main() {
  local opt

  while getopts ":h" opt; do
    case "$opt" in
      h) help; exit ;;
      *) die_invalid_opt "$opt" ;;
    esac
  done

  shift $((OPTIND - 1))
  [[ $# -ge 2 ]] || die_missing_arg

  local target
  target=$(dirname "$0")/$1
  [[ -e $target ]] && die "'$target' already exists"

  local branch_1=$1
  local branch_2
  shift

  local commits_1
  local commits_2

  for branch_2; do
    read -r commits_1 commits_2 < <(git rev-list --count --left-right "$branch_1...$branch_2")

    echo "$branch_1 has $commits_1 commit(s) that are not in $branch_2"
    echo "$branch_2 has $commits_2 commit(s) that are not in $branch_1"
  done
}

main "$@"
