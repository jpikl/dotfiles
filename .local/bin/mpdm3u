#!/usr/bin/env bash

set -euo pipefail

source "$BASH_LIB_DIR/core.sh"

help() {
  cat <<-EOT
		Generate M3U playlists from MPD database.
		Playlists structure is "{PLAYLIST_DIR}/{YEAR}/{ARTIST} - {ALBUM}.m3u"

		Usage:
		  $(self) [options] [year]...

		Options:
		  -v  Verbose mode with additional output.
		  -h  Print this help.

		Year:
		  Zero or more years for which generate playlists.
		  If not specified, every year found in MPD datebase will be used.

		Environment variables:
		  MUSIC_DIR      Directory where MPD expects to be music.
		  PLAYLISTS_DIR  Directory where to generate playlists.
	EOT
}

main() {
  local verbose=false
  local opt

  while getopts ":vh" opt; do
    case "$opt" in
      v) verbose=true ;;
      h) help; exit ;;
      *) die_invalid_opt "$opt" ;;
    esac
  done

  shift $((OPTIND - 1))

  [[ ${PLAYLISTS_DIR:-} ]] || die_no_var PLAYLISTS_DIR
  [[ ${MUSIC_DIR:-} ]] || die_no_var MUSIC_DIR

  [[ -d $PLAYLISTS_DIR ]] || die "'$PLAYLISTS_DIR' is not a directory"
  [[ -d $MUSIC_DIR ]] || die "'$MUSIC_DIR' is not a directory"

  [[ $verbose == true ]] && echo "Updating MPD database"
  mpc update --wait --quiet # Check mpd is running + update database

  local years=("$@")

  if [[ ${#years[@]} -eq 0 ]]; then
    mapfile -t years < <(mpc list Date)

    if [[ ${#years[@]} -eq 1 && ! ${years[0]} ]]; then
      die "no years fround in MPD database"
    fi
  fi

  local year
  for year in "${years[@]}"; do
    gen_playlists_year "$year"
  done
}

gen_playlists_year() {
  local year=$1
  local artist album

  while IFS='␝' read -r artist album; do
    gen_playlist_album "$year" "$artist" "$album"
  done < <(mpc --format='%artist%␝%album%' search Date "$year" | uniq)
}

gen_playlist_album() {
  local year=$1
  local artist=$2
  local album=$3

  artist=$(sanitize_name "$artist")
  album=$(sanitize_name "$album")

  local playlist_dir=$PLAYLISTS_DIR/$year
  mkdir --parents "$playlist_dir"

  local playlist_file="$playlist_dir/$artist - $album.m3u"
  [[ $verbose == true ]] && echo "Generating $playlist_file"

  local prefix
  prefix=$(realpath --relative-to="$playlist_dir" "$MUSIC_DIR")/
  prefix=${prefix//\//\\\\} # '/' to '\'

  {
    echo "#EXTM3U"
    mpc search Date "$year" Artist "$artist" Album "$album" \
      | sed --regexp-extended \
            --expression="s/^/$prefix/" \
            --expression='s/\//\\/g' # '/' to '\'
  } > "$playlist_file"
}

sanitize_name() {
  local name=$1

  name=${name//\//-} # '/' to '-'
  name=${name//:/ -} # ':' to ' -'
  name=${name//\?/}  # Remove '?'

  echo "$name"
}

main "$@"
