#!/usr/bin/env bash

# shellcheck source=.local/lib/bash/utils.sh
source "$BASH_LIB_DIR/utils.sh"

print_help() {
  echo "Cancelable sleep with displayed progress."
  echo
  echo "Usage:"
  echo "  $(self) [options] <duration> [message]"
  echo
  echo "Options:"
  echo "  -h, --help  Display this help."
  echo
  echo "Duration:"
  echo "  Number of seconds to sleep for."
  echo
  echo "Message:"
  echo "  Optional message to display during wait."
  echo
  echo "Exit code:"
  echo "  0  Normal execution."
  echo "  1  User canceled sleep."
}

set_duration() {
  # shellcheck disable=SC2015
  is_integer "$1" && [[ $1 -ge 0 ]] || die "Invalid duration '$1'!"
  duration=$1
}

process_args() {
  require_gnu_getopt

  local -r short_opts=h
  local -r long_opts=help
  local args

  args=$(get_args "$short_opts" "$long_opts" "$@") || die_invalid_args
  eval set -- "$args"

  while true ; do
    case "$1" in
      -h|--help) print_help; exit ;;
      --)        shift; break ;;
      *)         die_unprocessable_args ;;
    esac
  done

  if [[ $# -ge 1 ]]; then
    set_duration "$1"
    message=$2
  else
    die_missing_args
  fi
}

interactive_sleep() {
  local time_left=$duration
  local line

  while [[ $time_left -gt 0 ]]; do
    line="[$(progress-bar --width=10 --max-value="$duration" "$time_left")]"
    line="$line ($time_left s)"

    if [[ $message ]];  then
      line="$line $message"
    fi

    line="$line [Press any key to continue]"

    echo -ne "\r"
    echo -n "$line " # Clearing space at the end for case the previous line was 1 char longer.

    if read -rs -n1 -t 1; then
      clear_line "${#line}"
      exit 1
    fi

    (( time_left-- ))
  done

  clear_line "${#line}"
}

function main() {
  local duration
  local message

  process_args "$@"
  interactive_sleep
}

main "$@"
