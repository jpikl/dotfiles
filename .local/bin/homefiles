#!/usr/bin/env bash

set -euo pipefail

source "$BASH_LIB_DIR/core.sh"

help() {
  cat <<-EOT
		Initialize home directory.

		Usage:
		  $(self) [options]

		Options:
		  -d  Create directories.
		  -l  Create symbolic links.
		  -f  Download patched terminal fonts.
		  -h  Print this help.
	EOT
}

main() {
  local dirs=false
  local sym_links=false
  local fonts=false
  local opt

  while getopts ":dlfh" opt; do
    case "$opt" in
      d) dirs=true ;;
      l) sym_links=true ;;
      f) fonts=true ;;
      h) help; exit ;;
      *) die_invalid_opt "$opt" ;;
    esac
  done

  if [[ $dirs = true || $sym_links = true || $fonts = true ]]; then
    [[ $dirs = true ]] && create_dirs
    [[ $sym_links = true ]] && create_sym_links
    [[ $fonts = true ]] && download_fonts
  else
    die_help "nothing to do"
  fi
}

create_dirs() {
  create_dir "$BACKUP_DIR"
  create_dir "$CACHE_DIR"
  create_dir "$CONFIG_DIR"
  create_dir "$DESKTOP_DIR"
  create_dir "$DOCUMENTS_DIR"
  create_dir "$DOWNLOAD_DIR"
  create_dir "$LOCAL_BIN_DIR"
  create_dir "$LOCAL_LIB_DIR"
  create_dir "$LOCAL_SHARE_DIR"
  create_dir "$MUSIC_DIR"
  create_dir "$PICTURES_DIR"
  create_dir "$PLAYLISTS_DIR"
  create_dir "$PRIVATE_DECRYPTED_DIR"
  create_dir "$PRIVATE_ENCRYPTED_DIR"
  create_dir "$PUBLIC_DIR"
  create_dir "$TEMP_DIR"
  create_dir "$VIDEOS_DIR"
  create_dir "$WORKSPACE_DIR"
}

create_dir() {
  if [[ ! -d $1 ]]; then
    echo "Creating directory '$1'"
    mkdir "$1"
  fi
}

create_sym_links() {
  create_sym_link "$BINARIES_LINK" "$LOCAL_BIN_DIR"
  create_sym_link "$CACHE_LINK" "$CACHE_DIR"
  create_sym_link "$CONFIG_LINK" "$CONFIG_DIR"
  create_sym_link "$DATA_LINK" "$LOCAL_SHARE_DIR"
  create_sym_link "$LIBRARIES_LINK" "$LOCAL_LIB_DIR"
  create_sym_link "$MEDIA_LINK" "$MEDIA_DIR"
  create_sym_link "$VOLUMES_LINK" "$VOLUMES_DIR"
}

create_sym_link() {
  if [[ ! -L $1 ]]; then
    echo "Creating symbolic link '$1' to '$2'"
    ln --symbolic --no-target-directory "$2" "$1"
  fi
}

download_fonts() {
  local file
  for file in "Literation Mono Nerd Font Complete"{," Mono"}{," Windows Compatible"}.ttf; do
    download_font "https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/LiberationMono/complete/$file"
  done
}

download_font() {
  local font
  font=$(basename "$1")

  local dir=$LOCAL_SHARE_DIR/fonts
  local file=$dir/$font

  if [[ ! -f "$file" ]] || confirm "Re-download $font?"; then
    echo "Downloading $font"
    mkdir --parents "$dir"
    echo
    wget --no-verbose --output-document="$file" "$1" || rm --force "$file" # Clean up unfinished download.
    echo
  fi
}

main "$@"
