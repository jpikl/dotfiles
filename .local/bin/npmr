#!/usr/bin/env bash

set -euo pipefail

source ~/.local/lib/bash/core.sh

help() {
  cat <<-EOT
		List or (silently) run scripts of a npm package.

		Usage:
		  $(self) [<options>] [<script>...]

		Args:
		  <scipt>... Scripts to run.

		Options:
		  -1  Run only the first available script.
		  -S  Do not silence npm run output.
		  -h  Print this help.

		Runnable scripts are listed when no script to run is passed.
	EOT
}

main() {
  local opt
  local single=false
  local silent=true

  while getopts ":1Sh" opt; do
    case "$opt" in
      1) single=true ;;
      S) silent=false ;;
      h) help; exit ;;
      *) die_invalid_opt "$opt" ;;
    esac
  done

  shift $((OPTIND - 1))

  if [[ ! -f package.json ]]; then
    die "no package.json in current directory"
  fi

  # Lines with script names start with 2 spaces which we need to cut off.
  local scripts
  mapfile -t scripts < <(npm run | grep '^  \S' | cut --characters=3-)

  if [[ $# -eq 0 ]]; then
    printf "%s\n" "${scripts[@]}"
    exit
  fi

  local input_script
  local matched_script

  for input_script; do
    matched_script=

    for script in "${scripts[@]}"; do
      if [[ $script == "$input_script" ]]; then
        matched_script=$script
        break
      fi
    done

    if [[ $matched_script ]]; then
      if [[ $silent == true ]]; then
        npm run --silent "$matched_script"
      else
        npm run "$matched_script"
      fi
      if [[ $single == true ]]; then
        exit
      fi
    elif [[ $single == false ]]; then
      die "missing script: $input_script"
    fi
  done

  if [[ $single == true ]]; then
    die "no runnable scripts: $*"
  fi
}

main "$@"
