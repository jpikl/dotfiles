#!/usr/bin/env bash

set -euo pipefail

source "$BASH_LIB_DIR/core.sh"

help() {
  cat <<-EOT
		Find directories of Node.js modules.

		Usage:
		  $(self) [options] [--] [path]

		Options:
		  -Z  Print results delimited by NUL character instead of newline.
		  -h  Print this help.

		Path:
		  Search starting point.
		  Default path is the current working directory.
	EOT
}

main() {
  local zero_terminated=false
  local opt

  while getopts ":Zh" opt; do
    case "$opt" in
      Z) zero_terminated=true ;;
      h) help; exit ;;
      *) die_invalid_opt "$opt" ;;
    esac
  done

  shift $((OPTIND - 1))

  if [[ $# -ge 1 ]]; then
    [[ -d $1 ]] || die "'$1' is not a directory"
    cd "$1"
  fi

  local printf_arg="%h"
  local grep_args=

  if [[ $zero_terminated = true ]]; then
    printf_arg+="\0"
    grep_args=("--null-data" "--null")
  else
    printf_arg+="\n"
    grep_args=()
  fi

  # We use grep to raise error when nothing is found
  # shellcheck disable=SC2046
  find $(findexpr -s) \
       -name package.json \
       -printf "$printf_arg" \
    | grep "${grep_args[@]}" '.' \
    || die "unable to find any package.json"
}

main "$@"
