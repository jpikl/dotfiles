#!/usr/bin/env bash

set -euo pipefail

source "$BASH_LIB_DIR/core.sh"

help() {
  cat <<-EOT
		Print statistics of Java exceptions in a log file.

		Usage:
		  $(self) [<options>] [<file>]

		Args:
		  <file> Log file to read.

		Options:
		  -m        Include exception messages.
		  -n <max>  Limit exception messages to N characters.
		  -h        Print this help.

		Log is read from stdin when no file is passed.
	EOT
}

main() {
  local messages=false
  local messages_len=
  local opt

  while getopts ":mn:h" opt; do
    case "$opt" in
      m) messages=true ;;
      n) messages_len=$OPTARG ;;
      h) help; exit ;;
      *) die_invalid_opt "$opt" ;;
    esac
  done

  if [[ $messages_len ]]; then
    if [[ $messages == false ]]; then
      alert "using option -n without -m has no effect"
    fi
    if [[ ! ( $messages_len =~ ^[0-9]+$ && $messages_len -gt 0 ) ]]; then
      die_help "option -n requires positive integer as its argument"
    fi
  fi

  shift $((OPTIND - 1))

  if [[ $# -ge 1 ]]; then
    [[ -f "$1" ]] || die "'$1' is not a file"
    exec <"$1"
  fi

  local pattern='^((\w|\$)+\.)*(\w|\$)+(Exception|Throwable|Error)'

  if [[ $messages = true ]]; then
    if [[ $messages_len ]]; then
      pattern="${pattern}.{0,$messages_len}"
    else
      pattern="${pattern}.*"
    fi
  fi

  grep --extended-regexp --only-matching "$pattern" \
    | LC_ALL=C sort \
    | LC_ALL=C uniq --count  \
    | LC_ALL=C sort --reverse
}

main "$@"
