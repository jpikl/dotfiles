#!/usr/bin/env bash

set -euo pipefail

source "$BASH_LIB_DIR/core.sh"
source "$BASH_LIB_DIR/args.sh"
source "$BASH_LIB_DIR/utils.sh"

help() {
  cat <<-EOT
		Run script of a npm package.

		Usage:
		  $(self) [options] [--] <script>...

		Options:
		  -r            Rerun script if it ends unexpectedly.
		  -d <seconds>  Rerun delay (default: $rerun_delay).
		  -h            Display this help.

		Script:
		  One or more script names.
		  First of these scripts that is defined in package.json will be run.
	EOT
}

main() {
  local rerun_on_failure=false
  local rerun_delay=30
  local opt

  while getopts ":rd:h" opt; do
    case "$opt" in
      r) rerun_on_failure=true ;;
      d) # shellcheck disable=SC2015
         is_integer "$OPTARG" && [[ $OPTARG -ge 0 ]] || die "invalid rerun delay '$OPTARG'"
         rerun_delay=$OPTARG ;;
      h) help; exit ;;
      *) die_invalid_opt "$opt" ;;
    esac
  done

  shift $((OPTIND - 1))
  [[ $# -eq 0 ]] && die_missing_arg

  local scripts=("$@")
  local available_scripts
  local target_script=

  mapfile -t available_scripts < <(npmls)

  local script
  for script in "${scripts[@]}"; do
    if is_one_of "$script" "${available_scripts[@]}"; then
      target_script=$script
      break;
    fi
  done

  if [[ -z $target_script ]]; then
    die "package.json has none of [$(join_values ", " "${scripts[@]}")] scripts"
  fi

  while ! npm run "$target_script"; do
    [[ $rerun_on_failure = false ]] && exit 1
    printf "\npackage.json %s script unexpectedly crashed!\n" "$target_script" >&2
    isleep "$rerun_delay" "Restart" || true
  done
}

main "$@"
