#!/usr/bin/env bash

set -euo pipefail

source "$BASH_LIB_DIR/core.sh"
source "$BASH_LIB_DIR/args.sh"

help() {
  cat <<-EOT
		Count occurrences of Java exceptions in a log file.

		Usage:
		  $(self) [options] [--] [file]

		Options:
		  -m, --messages  Include exception messages.
		  -h, --help      Display this help.

		File:
		  Log file to read.
		  If not specified, text is read from stdin.
	EOT
}

set_file() {
  [[ -f "$1" ]] || die "'$1' is not a file"
  file=$1
}

init() {
  local -r short_opts=mh
  local -r long_opts=messages,help
  local args

  args=$(get_args "$short_opts" "$long_opts" "$@")
  eval set -- "$args"

  while true ; do
    case "$1" in
      -m|--messages) messages=true; shift ;;
      -h|--help)     help; exit ;;
      --)            shift; break ;;
      *)             die_unprocessable_args ;;
    esac
  done

  if [[ $# -ge 1 ]]; then
    set_file "$1"
  fi
}

java_count_exceptions() {
  if [[ $file ]]; then
    exec <"$file"
  fi

  local pattern='^((\w|\$)+\.)*(\w|\$)+(Exception|Throwable|Error)'

  if [[ $messages = true ]]; then
    pattern="${pattern}.*"
  fi

  grep --extended-regexp --only-matching "$pattern" \
    | LC_ALL=C sort \
    | LC_ALL=C uniq --count  \
    | LC_ALL=C sort --reverse
}

function main() {
  local messages=false
  local file=

  init "$@"
  java_count_exceptions
}

main "$@"
