#!/usr/bin/env bash

# shellcheck source=.local/lib/bash/utils.sh
source "$BASH_LIB_DIR/utils.sh"

print_help() {
  echo "Initialize home directory structure."
  echo
  echo "Usage:"
  echo "  $(self) [options]"
  echo
  echo "Options:"
  echo "  -d, --directories     Create directories for *_DIR environment variables."
  echo "  -s, --symbolic-links  Create symbolic links for *_LINK environment variables."
  echo "  -h, --help            Display this help."
}

process_args() {
  require_gnu_getopt

  local -r short_opts=dsh
  local -r long_opts=directories,symbolic-links,help
  local args

  args=$(get_args "$short_opts" "$long_opts" "$@") || die_invalid_args
  eval set -- "$args"

  while true ; do
    case "$1" in
      -d|--directories)    directories=true; shift ;;
      -s|--symbolic-links) symbolic_links=true; shift ;;
      -h|--help)           print_help; exit ;;
      --)                  shift; break ;;
      *)                   die_unprocessable_args ;;
    esac
  done
}

create_dir() {
  if [[ ! -d $1 ]]; then
    echo "Creating directory '$1'"
    mkdir "$1"
  fi
}

create_dirs() {
  create_dir "$BACKUP_DIR"
  create_dir "$BINARIES_DIR"
  create_dir "$CACHE_DIR"
  create_dir "$CONFIG_DIR"
  create_dir "$DATA_DIR"
  create_dir "$DATA_DIR/mpd" # Has to exist otherwise mpd would not start.
  create_dir "$DESKTOP_DIR"
  create_dir "$DOCUMENTS_DIR"
  create_dir "$DOWNLOAD_DIR"
  create_dir "$LIBRARIES_DIR"
  create_dir "$MUSIC_DIR"
  create_dir "$PICTURES_DIR"
  create_dir "$PLAYLISTS_DIR"
  create_dir "$PRIVATE_DIR"
  create_dir "$PRIVATE_HIDDEN_DIR"
  create_dir "$PUBLIC_DIR"
  create_dir "$TEMP_DIR"
  create_dir "$TEMPLATES_DIR"
  create_dir "$VIDEOS_DIR"
  create_dir "$WORKSPACE_DIR"
}

create_sym_link() {
  if [[ ! -L $1 ]]; then
    echo "Creating symbolic link '$1' to '$2'"
    ln --symbolic --no-target-directory "$2" "$1"
  fi
}

create_sym_links() {
  create_sym_link "$BINARIES_LINK" "$BINARIES_DIR"
  create_sym_link "$CACHE_LINK" "$CACHE_DIR"
  create_sym_link "$CONFIG_LINK" "$CONFIG_DIR"
  create_sym_link "$DATA_LINK" "$DATA_DIR"
  create_sym_link "$LIBRARIES_LINK" "$LIBRARIES_DIR"
  create_sym_link "$MEDIA_LINK" "$MEDIA_DIR"
  create_sym_link "$VOLUMES_LINK" "$VOLUMES_DIR"
}

home_init() {
  [[ $directories = true ]] && create_dirs
  [[ $symbolic_links = true ]] && create_sym_links
}

function main() {
  local directories=false
  local symbolic_links=false

  process_args "$@"
  home_init
}

main "$@"
