#!/usr/bin/env sh

# Execute command with dotfiles environment
alias dotenv='env GIT_DIR=$HOME/.local/share/dotfiles GIT_WORK_TREE=$HOME'

# Git for dotfiles
alias dotfiles='dotenv git'

# VS Code for dotfiles
alias dotcode='dotenv code'

# List PATH entries as lines
alias lspath='echo $PATH | tr : "\n"'

# Grep with colors
alias grep='grep --color=auto'

if [ -x "$(command -v eza)" ]; then
  if [ "$DISPLAY" ]; then
    alias eza='eza --git --icons'
  else
    alias eza='eza --git'
  fi

  alias ls='eza'
  alias la='eza -a'
  alias ll='eza -l'
  alias lla='eza -la'
else
  # List files with colors by default
  alias ls='ls --color=auto'

  # List files, include hiden
  alias la='ls -a'

  # List files in human-readable long format
  alias ll='ls -lh'

  # List files in human-readable long format, include hidden
  alias lla='ls -lha'
fi

if [ -x "$(command -v erd)" ]; then
  if [ "$DISPLAY" ]; then
    alias erd='erd --icons --human'
  else
    alias erd='erd --human'
  fi
  alias tree='erd'
elif [ -x "$(command -v eza)" ]; then
  alias tree='eza -T'
fi

# Create nested directories by default
alias mkdir='mkdir -p'

# Remove files with recursion and force
alias rmrf='rm -rf'

# Sort lines, output unique results
alias sortu='sort -u'

# Sort lines, output unique results with their count
sortuc() {
  sort | uniq -c | sort -nr
}

# Count input lines
alias wcl='wc -l'

# Configures LS_COLORS
if [ -x "$(command -v dircolors)" ]; then
  eval "$(dircolors --sh)"
fi

# Prefer nvim over vim/vi
if [ -x "$(command -v nvim)" ]; then
    alias vim=nvim
    alias vi=nvim
fi

# Helix editor shortcut
alias hx=helix

# Cut lines to fit terminal width
alias termfit='cut --characters=-$COLUMNS'

# Init 'fuck' alias which corrects wrong commands
if [ -x "$(command -v thefuck)" ]; then
  eval "$(thefuck --alias)"
fi


# Convert Windows-1250 to UTF-8
alias win1250-utf8='iconv --from-code=WINDOWS-1250 --to-code=UTF-8'

# Convert UTF-8 to Windows-1250
alias utf8-win1250='iconv --from-code=UTF-8 --to-code=WINDOWS-1250'
# Convert UTF-8 to Windows-1250 (ignore unknown characters)
alias utf8-win1250-i='iconv --from-code=UTF-8 --to-code=WINDOWS-1250//IGNORE'
# Convert UTF-8 to Windows-1250 (with transliteration)
alias utf8-win1250-t='iconv --from-code=UTF-8 --to-code=WINDOWS-1250//TRANSLIT'

# Convert ISO-88592 to UTF-8
alias iso88592-utf8='iconv --from-code=ISO-8859-2 --to-code=UTF-8'
# Convert UTF-8 to ISO-88592
alias utf8-iso88592='iconv --from-code=UTF-8 --to-code=ISO-8859-2'

# Ip command with colors
alias ip='ip -color=auto'

# Print network devices with IPv4 address
alias ip4='ip -brief -family inet address show'

# Print IPv4 addresses of active network devices
alias ip4u='ip4 | fgrep " UP " | egrep --color=never --only-matching "[0-9]+(\.[0-9]+){3}"'

# Print network devices with IPv6 address
alias ip6='ip -brief -family inet6 address show'

# Print network devices with MAC address
alias iplink='ip -brief link show'

# Open React Native debug menu using adb
alias rndebug='adb shell input keyevent 82'


# Docker container operations
alias doco='docker container'

# Docker image operations
alias doim='docker image'

# Docker volume operations
alias dovo='docker volume'

# Execute command in a docker container
alias doex='docker exec -it'

# Start shell in a docker container
dosh() {
  [ "$1" ] && docker exec -it "$1" sh -li
}

# Start http server
alias hs='http-server'

# Start http server (no cache) and open browser
alias hsdev='hs -c-1 -o --'


# Maven install
alias mvni='mvn install'
# Maven install (skip tests)
alias mvnist='mvni -Dmaven.test.skip=true'

# Maven clean and install
alias mvnci='mvn clean install'
# Maven clean and install (skip tests)
alias mvncist='mvnci -Dmaven.test.skip=true'

# Maven dependency tree
alias mvndeps='mvn dependency:tree'

# Set version of a Maven project
mvnsv() {
  mvn versions:set -DnewVersion="$1" -DgenerateBackupPoms=false --quiet
}

# Npm install (global mode)
alias npmgi='npm -g install'
# Npm update (global mode)
alias npmgup='npm -g update'
# Npm uninstall (global mode)
alias npmgun='npm -g uninstall'
# List globaly installed npm packages
alias npmgl='npm -g --depth=0 list'

# Start npm development script
alias npmd='npm run dev'
# Npm install
alias npmi='npm install'
# Npm install (with node_modules removal)
alias npmii='rm -rf node_modules && npmi'
# Npm update
alias npmup='npm update'
# Npm uninstall
alias npmun='npm uninstall'
# List installed npm packages
alias npml='npm --depth=0 list'

# Start SSH agent if needed
alias sshi='eval "$(sshctl start)"'
# Kill SSH agent
alias sshk='eval "$(sshctl stop)"'
# Select and add load SSH key
alias ssha='sshctl add'
# List loaded SSH keys
alias sshl='sshctl list'

# Colored pager for man
if [ -x "$(command -v bat)" ]; then
  export MANROFFOPT="-c" MANPAGER="$SHELL -c 'col --no-backspaces --spaces | bat --plain --language man --paging=always'"
elif [ -x "$(command -v most)" ]; then
  export MANPAGER=most
elif [ -x "$(command -v less)" ]; then
  MANPAGER="env LESS_TERMCAP_mb=$(printf '\e[1;31m') \
                LESS_TERMCAP_md=$(printf '\e[1;36m') \
                LESS_TERMCAP_me=$(printf '\e[0m') \
                LESS_TERMCAP_so=$(printf '\e[01;44;33m') \
                LESS_TERMCAP_se=$(printf '\e[0m') \
                LESS_TERMCAP_us=$(printf '\e[1;32m') \
                LESS_TERMCAP_ue=$(printf '\e[0m') \
                less"
  export MANPAGER
fi

# Our own implementation when man is not available (MinGW)
if [ ! -x "$(command -v man)" ]; then
  alias man=wman
fi

alias editpipe='xpipe ~/.local/bin/edit'
alias openpipe='xpipe ~/.local/bin/open'
