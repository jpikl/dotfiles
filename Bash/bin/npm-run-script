#!/usr/bin/env bash

# shellcheck source=utils.sh
source "$BASH_DIR/utils.sh"

print_help() {
  echo "Run script of a npm package."
  echo
  echo "Usage:"
  echo "  $(self) [options] <script>..."
  echo
  echo "Options:"
  echo "  -r, --rerun-on-failure       Rerun script if it ends unexpectedly."
  echo "  -d, --rerun-delay=<seconds>  Rerun delay (default: $rerun_delay)."
  echo "  -h, --help                   Display this help."
  echo
  echo "Script:"
  echo "  One or more script names."
  echo "  First of these scripts that is defined in package.json will be run."
}

set_rerun_delay() {
  # shellcheck disable=SC2015
  is_integer "$1" && [[ $1 -ge 0 ]] || die "Invalid rerun delay '$1'!"
  rerun_delay=$1
}

process_args() {
  require_gnu_getopt

  local -r short_opts=rd:h
  local -r long_opts=rerun-on-failure,rerun-delay:,help
  local args

  args=$(get_args "$short_opts" "$long_opts" "$@") || die_invalid_args
  eval set -- "$args"

  while true ; do
    case "$1" in
      -r|--rerun-on-failure) rerun_on_failure=true; shift ;;
      -d|--rerun-delay)      set_rerun_delay "$2"; shift 2 ;;
      -h|--help)             print_help; exit ;;
      --)                    shift; break ;;
      *)                     die_unprocessable_args ;;
    esac
  done

  if [[ $# -ge 1 ]]; then
    scripts=("$@")
  else
    die_missing_args
  fi
}

npm_run_any() {
  require_cmd npm

  [[ -f package.json ]] || die "No package.json in the current directory!"

  local available_scripts
  local target_script

  mapfile -t available_scripts < <(npm-list-scripts)

  for script in "${scripts[@]}"; do
    if is_one_of "$script" "${available_scripts[@]}"; then
      target_script=$script
      break;
    fi
  done

  if [[ -z $target_script ]]; then
    die "package.json has none of [$(join_values ", " "${scripts[@]}")] scripts!"
  fi

  while ! npm run "$target_script"; do
    [[ $rerun_on_failure = true ]] || break
    echo_error
    echo_error "package.json $target_script script unexpectedly crashed!"
    interactive-sleep "$rerun_delay" "Script will automatically rerun"
  done
}

function main() {
  local rerun_on_failure
  local rerun_delay=30
  local scripts

  process_args "$@"
  npm_run_any
}

main "$@"
