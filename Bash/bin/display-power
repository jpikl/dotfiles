#!/usr/bin/env bash

# shellcheck source=utils.sh
source "$BASH_DIR/utils.sh"

print_help() {
  local -r self=$(basename "$0")

  echo "Change display power mode."
  echo
  echo "Usage:"
  echo "  $self [options] <mode>"
  echo
  echo "Options:"
  echo "  -t, --timeout=<seconds>  Change mode after a timeout."
  echo "  -h, --help               Display this help."
  echo
  echo "Mode:"
  echo "  on       Turn on display."
  echo "  standby  Stand-by display."
  echo "  suspend  Suspend display."
  echo "  off      Turn off display."
}

set_timeout() {
  # shellcheck disable=SC2015
  is_integer "$1" && [[ $1 -ge 0 ]] || die "Invalid timeout '$1'!"
  timeout=$1
}

set_mode() {
  [[ $1 =~ ^(on|standby|suspend|off)$ ]] || die "Invalid mode '$1'!"
  mode=$1
}

process_args() {
  require_gnu_getopt

  local -r short_opts=t:h
  local -r long_opts=timeout:,help
  local help=false
  local args

  args=$(get_args "$short_opts" "$long_opts" "$@") || die
  eval set -- "$args"

  while true ; do
    case "$1" in
      -t|--timeout) set_timeout "$2"; shift 2 ;;
      -h|--help)    help=true; shift ;;
      --)           shift; break ;;
      *)            die "Unable to process arguments!" ;;
    esac
  done

  if [[ $help = true || $# -eq 0 ]]; then
    print_help
    exit
  fi

  set_mode "$1"
}

display_power() {
  require_cmd xset
  [[ $timeout ]] && sleep "$timeout"
  xset dpms force "$mode"
}

function main() {
  local timeout
  local mode

  process_args "$@"
  display_power
}

main "$@"
